CSS

You can add style to an element by specifying it in the style element and setting a property for it like this:
element {
 property: value;
}
eg - h1{
         text-align: center;
         }
This will shift h1 to center

we can add more like h1,h2,p{} and all will follow the same style
As there will be many styles-> we make a separate css file not included in html

Now you need to link the styles.css file so the styles will be applied again. Nest a self-closing link element in the head element. Give it a rel attribute value stylesheet and an href attribute value of styles.css

link is a self closing element in head

Step 17
For the styling of the page to look similar on mobile as it does on a desktop or laptop, you need to add a meta element with a special content attribute.
<meta name="viewport" content="width=device-width, initial-scale=1.0" /> //Added for fitting the device width

Add another style to the file that changes the background-color property to brown for the body element.


The div element is used mainly for design layout purposes unlike the other content elements you have used so far. Add a div element inside the body element and then move all the other elements inside the new div.
The goal now is to make the div not take up the entire width of the page. The CSS width property is perfect for this. Create a new type selector in the style sheet that gives your div element a width of 300px.

px->pixels
width can be changed to percentage like 80% of parent element

Center the div horizontally-> You can do this by setting its margin-left and margin-right properties to auto. Think of the margin as invisible space around an element. Using these two margin properties, center the div element within the body element.
The whole idea idea of div to use for design layout purposes.

 A class selector is defined by a name with a dot directly in front of it, like this:

.class-name {              .menu{
  styles            ->>       styles
}                           }


That is kind of what you want, but now it would be nice if the flavor and price were on the same line. p elements are block-level elements, so they take up the entire width of their parent element
To get them on the same line, you need to apply some styling to the p elements, so they behave more like inline elements

The p elements are nested in an article element with the class attribute of item. You can style all the p elements nested anywhere in elements with a class named item like this:
.item p { }
Using the above selector, add a display property with value inline-block so the p elements behave more like inline elements.
Go to stp-36,37 if want to bring elements inline.

The current width of the menu will always take up 80% of the body element's width. On a very wide screen, the coffee and dessert appear far apart from their prices.
Add a max-width property to the menu class with a value of 500px to prevent it from growing too wide.

You can change the font-family of text, to make it look different from the default font of your browser. Each browser has some common fonts available to it.
Change all the text in your body, by adding a font-family property with the value sans-serif. This is a fairly common font that is very readable.
Don't keep same fonts and change according to needs.
